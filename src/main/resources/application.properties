#Spring Data JPA

#开启hibernate对sql语句的打印
spring.jpa.show-sql = true
logging.level.org.springframework.data=DEBUG
spring.jpa.hibernate.ddl-auto=

#Spring Data JPA End

spring.datasource.url=jdbc:mysql://localhost:3306/tdf_db?characterEncoding=utf-8&serverTimezone=UTC&useSSL=false
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

spring.cache.type=guava
# spring.cache.ehcache.config=classpath:config/ehcache.xml
# spring.cache.cache-names=cache1,cache2
# spring.cache.guava.spec=maximumSize=500,expireAfterAccess=5m

# AOP
# 其中spring.aop.auto属性默认是开启的
# Add @EnableAspectJAutoProxy.
spring.aop.auto=true

# 而当我们需要使用CGLIB来实现AOP的时候，
# 需要配置spring.aop.proxy-target-class=true，不然默认使用的是标准Java的实现。
# Whether subclass-based (CGLIB) proxies are to be created (true)
# as opposed to standard Java interface-based proxies (false).
spring.aop.proxy-target-class=false

# thymeleaf
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.check-template-location=true
spring.thymeleaf.suffix=.html
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.cache=false
